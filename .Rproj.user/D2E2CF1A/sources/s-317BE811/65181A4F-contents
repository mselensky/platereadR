abs_to_ppm <- function(assay.data.raw, sample.IDs, standard.IDs) {

  #remove header info from Gen5 output
  suppressWarnings(
    assay_data <- assay.data.raw %>%
      slice(-c(1:33)) %>%
      row_to_names(1) %>%
      clean_names() %>%
      filter(!is.na(.[,2]),
             !.[,2] == "Curve Name",
             !.[,2] == "StdCurve") %>%
      rename("well_row" = names(.[,2])) %>%
      select(-1, -15)
  )

  assay_data_long <- assay_data %>%
    pivot_longer(cols = 2:ncol(.),
                 values_to = "absorbance",
                 names_to = "well_column") %>%
    mutate(well_ID = str_c(well_row, well_column),
           well_ID = str_remove(well_ID, "x"),
           absorbance = as.numeric(absorbance)) %>%
    select(well_ID, absorbance)

  suppressMessages(
    sample_data <- assay_data_long %>%
      left_join(., sampleIDs) %>%
      filter(!is.na(sample)) %>%
      mutate(rowID = as.character(seq(1:nrow(.))))
  )

  suppressMessages(
    standard_data <- assay_data_long %>%
      left_join(., standardIDs) %>%
      filter(!is.na(standard))
  )
  # use lm to predict analyte concentration
  curve <- lm(standard ~ absorbance, data = standard_data)
  predicted_vals <- predict(curve, newdata = sample_data)

  concentrations <- predicted_vals %>%
    as.data.frame() %>%
    rename("ppm" = ".") %>%
    rownames_to_column("rowID") %>%
    left_join(sample_data, ., "rowID") %>%
    select(-rowID)

  concentrations
}
